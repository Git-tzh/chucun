# 对于列表排序的一系列练习

"""
放眼世界 想出至少5个你渴望去旅游的地方。
将这些地方存储在一个列表中，并确保其中的元素不是按字母 顺序排列的。
按原始排列顺序打印该列表。不要考虑输出是否整洁的问题， 只管打印原始Python列表。
"""
look = ["大理", "布达拉宫", "天山", "阿尔卑斯山", "珠穆朗玛峰"]
print(look)

# 使用sorted() 按字母顺序打印这个列表，同时不要修改它。
print(sorted(look))

# 再次打印该列表，核实排列顺序未变。
print(look)

# 使用sorted() 按与字母顺序相反的顺序打印这个列表， 同时不要修改它。
print(sorted(look, reverse=True))

# 再次打印该列表，核实排列顺序未变。
print(look)


# 使用reverse() 修改列表元素的排列顺序。打印该列表， 核实排列顺序确实变了。
look.reverse()
print(look)

# 使用reverse() 再次修改列表元素的排列顺序。打印该列表，核实已恢复到原来的排列顺序。
look.reverse()
print(look)


# 使用sort() 修改该列表，使其元素按字母顺序排列。打印该列表，核实排列顺序确实变了。
look.sort()
print(look)


# 使用sort() 修改该列表，使其元素按与字母顺序相反的 顺序排列。打印该列表，核实排列顺序确实变了。
look.sort(reverse=True)
print(look)





"""
晚餐嘉宾 在完成练习3-4~练习3-7时编写的程序之 一中，使用len() 打印一条消息，指出你邀请了多少位嘉宾来 共进晚餐。
"""
print(f"我一共想去{len(look)}个地方")






"""
尝试使用各个函数 想想可存储到列表中的东 西，如山川、河流、国家、城市、语言或你喜欢的任何东西。 编写一个程序，在其中创建一个包含这
些元素的列表，然后， 对于本章介绍的每个函数，都至少使用一次来处理这个列表。
"""

